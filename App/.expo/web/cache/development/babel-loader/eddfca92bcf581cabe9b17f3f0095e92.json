{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/george/Documents/fii-stuff/tiln/tiln-travel-assistant-mobile/App/components/Record.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Audio } from 'expo-av';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaterialCommunityIcon from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar RecordIcon = React.createElement(MaterialCommunityIcon, {\n  size: 25,\n  name: 'record-rec',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 20\n  }\n});\nvar recordingSettings = {\n  android: {\n    extension: '.m4a',\n    outputFormat: Audio.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n    audioEncoder: Audio.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n    sampleRate: 44100,\n    numberOfChannels: 2,\n    bitRate: 128000\n  },\n  ios: {\n    extension: '.m4a',\n    outputFormat: Audio.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC,\n    audioQuality: Audio.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n    sampleRate: 44100,\n    numberOfChannels: 2,\n    bitRate: 128000,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false\n  }\n};\n\nvar Record = function (_React$Component) {\n  _inherits(Record, _React$Component);\n\n  var _super = _createSuper(Record);\n\n  function Record(props) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _super.call(this, props);\n\n    _this._askForPermissions = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.AUDIO_RECORDING));\n\n            case 2:\n              response = _context.sent;\n\n              _this.setState({\n                haveRecordingPermissions: response.status === 'granted'\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._updateScreenForSoundStatus = function (status) {\n      if (status.isLoaded) {\n        _this.setState({\n          soundDuration: status.durationMillis,\n          soundPosition: status.positionMillis,\n          shouldPlay: status.shouldPlay,\n          isPlaying: status.isPlaying,\n          rate: status.rate,\n          muted: status.isMuted,\n          volume: status.volume,\n          shouldCorrectPitch: status.shouldCorrectPitch,\n          isPlaybackAllowed: true\n        });\n      } else {\n        _this.setState({\n          soundDuration: null,\n          soundPosition: null,\n          isPlaybackAllowed: false\n        });\n\n        if (status.error) {\n          console.log(\"FATAL PLAYER ERROR: \" + status.error);\n        }\n      }\n    };\n\n    _this._updateScreenForRecordingStatus = function (status) {\n      if (status.canRecord) {\n        _this.setState({\n          isRecording: status.isRecording,\n          recordingDuration: status.durationMillis\n        });\n      } else if (status.isDoneRecording) {\n        _this.setState({\n          isRecording: false,\n          recordingDuration: status.durationMillis\n        });\n\n        if (!_this.state.isLoading) {\n          _this._stopRecordingAndEnablePlayback();\n        }\n      }\n    };\n\n    _this._onRecordPressed = function () {\n      if (_this.state.isRecording) {\n        _this._stopRecordingAndEnablePlayback();\n      } else {\n        _this._stopPlaybackAndBeginRecording();\n      }\n    };\n\n    _this._onPlayPausePressed = function _callee2() {\n      var soundObject;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              soundObject = new Audio.Sound();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(soundObject.loadAsync(require(\"../assets/audio/result2.mp3\")));\n\n            case 4:\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(soundObject.playAsync());\n\n            case 6:\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this._onStopPressed = function () {\n      if (_this.sound != null) {\n        _this.sound.stopAsync();\n      }\n    };\n\n    _this._onMutePressed = function () {\n      if (_this.sound != null) {\n        _this.sound.setIsMutedAsync(!_this.state.muted);\n      }\n    };\n\n    _this._onVolumeSliderValueChange = function (value) {\n      if (_this.sound != null) {\n        _this.sound.setVolumeAsync(value);\n      }\n    };\n\n    _this._trySetRate = function _callee3(rate, shouldCorrectPitch) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(_this.sound != null)) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(_this.sound.setRateAsync(rate, shouldCorrectPitch));\n\n            case 4:\n              _context3.next = 8;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](1);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 6]], Promise);\n    };\n\n    _this._onRateSliderSlidingComplete = function _callee4(value) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this._trySetRate(value * RATE_SCALE, _this.state.shouldCorrectPitch);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onPitchCorrectionPressed = function _callee5(value) {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this._trySetRate(_this.state.rate, !_this.state.shouldCorrectPitch);\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onSeekSliderValueChange = function (value) {\n      if (_this.sound != null && !_this.isSeeking) {\n        _this.isSeeking = true;\n        _this.shouldPlayAtEndOfSeek = _this.state.shouldPlay;\n\n        _this.sound.pauseAsync();\n      }\n    };\n\n    _this._onSeekSliderSlidingComplete = function _callee6(value) {\n      var seekPosition;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (_this.sound != null) {\n                _this.isSeeking = false;\n                seekPosition = value * _this.state.soundDuration;\n\n                if (_this.shouldPlayAtEndOfSeek) {\n                  _this.sound.playFromPositionAsync(seekPosition);\n                } else {\n                  _this.sound.setPositionAsync(seekPosition);\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.recording = null;\n    _this.sound = null;\n    _this.isSeeking = false;\n    _this.shouldPlayAtEndOfSeek = false;\n    _this.state = {\n      haveRecordingPermissions: false,\n      isLoading: false,\n      isPlaybackAllowed: false,\n      muted: false,\n      soundPosition: null,\n      soundDuration: null,\n      recordingDuration: null,\n      shouldPlay: false,\n      isPlaying: false,\n      isRecording: false,\n      fontLoaded: false,\n      shouldCorrectPitch: true,\n      volume: 1.0,\n      rate: 1.0\n    };\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._askForPermissions();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._onStopPressed();\n    }\n  }, {\n    key: \"_stopPlaybackAndBeginRecording\",\n    value: function _stopPlaybackAndBeginRecording() {\n      var recording;\n      return _regeneratorRuntime.async(function _stopPlaybackAndBeginRecording$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n\n              if (!(this.sound !== null)) {\n                _context7.next = 6;\n                break;\n              }\n\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(this.sound.unloadAsync());\n\n            case 4:\n              this.sound.setOnPlaybackStatusUpdate(null);\n              this.sound = null;\n\n            case 6:\n              _context7.next = 8;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 8:\n              if (this.recording !== null) {\n                this.recording.setOnRecordingStatusUpdate(null);\n                this.recording = null;\n              }\n\n              recording = new Audio.Recording();\n              _context7.next = 12;\n              return _regeneratorRuntime.awrap(recording.prepareToRecordAsync(recordingSettings));\n\n            case 12:\n              recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\n              this.recording = recording;\n              _context7.next = 16;\n              return _regeneratorRuntime.awrap(this.recording.startAsync());\n\n            case 16:\n              this.setState({\n                isLoading: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_stopRecordingAndEnablePlayback\",\n    value: function _stopRecordingAndEnablePlayback() {\n      var fileURI, info, _await$this$recording, sound, status;\n\n      return _regeneratorRuntime.async(function _stopRecordingAndEnablePlayback$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n              _context8.prev = 1;\n              _context8.next = 4;\n              return _regeneratorRuntime.awrap(this.recording.stopAndUnloadAsync());\n\n            case 4:\n              _context8.next = 8;\n              break;\n\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](1);\n\n            case 8:\n              fileURI = this.recording.getURI();\n              console.log('File URI is: ');\n              console.log(fileURI);\n              _context8.next = 13;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(fileURI));\n\n            case 13:\n              info = _context8.sent;\n              console.log(\"FILE INFO: \" + JSON.stringify(info));\n              _context8.next = 17;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                playsInSilentLockedModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 17:\n              _context8.next = 19;\n              return _regeneratorRuntime.awrap(this.recording.createNewLoadedSoundAsync({\n                isLooping: true,\n                isMuted: this.state.muted,\n                volume: this.state.volume,\n                rate: this.state.rate,\n                shouldCorrectPitch: this.state.shouldCorrectPitch\n              }, this._updateScreenForSoundStatus));\n\n            case 19:\n              _await$this$recording = _context8.sent;\n              sound = _await$this$recording.sound;\n              status = _await$this$recording.status;\n              this.sound = sound;\n              this.setState({\n                isLoading: false\n              });\n\n            case 24:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, [[1, 6]], Promise);\n    }\n  }, {\n    key: \"_getSeekSliderPosition\",\n    value: function _getSeekSliderPosition() {\n      if (this.sound != null && this.state.soundPosition != null && this.state.soundDuration != null) {\n        return this.state.soundPosition / this.state.soundDuration;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getMMSSFromMillis\",\n    value: function _getMMSSFromMillis(millis) {\n      var totalSeconds = millis / 1000;\n      var seconds = Math.floor(totalSeconds % 60);\n      var minutes = Math.floor(totalSeconds / 60);\n\n      var padWithZero = function padWithZero(number) {\n        var string = number.toString();\n\n        if (number < 10) {\n          return '0' + string;\n        }\n\n        return string;\n      };\n\n      return padWithZero(minutes) + ':' + padWithZero(seconds);\n    }\n  }, {\n    key: \"_getPlaybackTimestamp\",\n    value: function _getPlaybackTimestamp() {\n      if (this.sound != null && this.state.soundPosition != null && this.state.soundDuration != null) {\n        return this._getMMSSFromMillis(this.state.soundPosition) + \" / \" + this._getMMSSFromMillis(this.state.soundDuration);\n      }\n\n      return '';\n    }\n  }, {\n    key: \"_getRecordingTimestamp\",\n    value: function _getRecordingTimestamp() {\n      if (this.state.recordingDuration != null) {\n        return \"\" + this._getMMSSFromMillis(this.state.recordingDuration);\n      }\n\n      return \"\" + this._getMMSSFromMillis(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      var recordText = this.state.isPlaybackAllowed ? 'Start Recording ' : (this.state.isRecording ? 'Stop' : 'Start') + ' Recording';\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.recordContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: this._onRecordPressed,\n        disabled: this.state.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.recordContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }, React.createElement(MaterialCommunityIcon, {\n        size: 85,\n        name: this.state.isRecording ? 'stop' : 'record-rec',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }\n      }, recordText)))), React.createElement(View, {\n        style: [styles.playbackContainer, {\n          opacity: this.state.isPlaybackAllowed ? 1 : 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, React.createElement(Slider, {\n        style: styles.playbackSlider,\n        value: this._getSeekSliderPosition(),\n        onValueChange: this._onSeekSliderValueChange,\n        onSlidingComplete: this._onSeekSliderSlidingComplete,\n        disabled: !this.state.isPlaybackAllowed || this.state.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: [styles.playbackTimestamp],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }\n      }, this._getPlaybackTimestamp()), React.createElement(View, {\n        style: styles.playStopContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onPlayPausePressed,\n        disabled: !this.state.isPlaybackAllowed || this.state.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      }, this.state.isPlaying ? 'Pause' : 'Play')))));\n    }\n  }]);\n\n  return Record;\n}(React.Component);\n\nexport { Record as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch'\n  },\n  recordContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  playbackContainer: {\n    alignSelf: 'stretch',\n    alignItems: 'center'\n  },\n  playbackSlider: {\n    alignSelf: 'stretch'\n  },\n  playbackTimestamp: {\n    textAlign: 'right',\n    alignSelf: 'stretch',\n    paddingRight: 20\n  }\n});","map":{"version":3,"sources":["/home/george/Documents/fii-stuff/tiln/tiln-travel-assistant-mobile/App/components/Record.js"],"names":["React","Audio","Permissions","FileSystem","MaterialCommunityIcon","RecordIcon","recordingSettings","android","extension","outputFormat","RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4","audioEncoder","RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC","sampleRate","numberOfChannels","bitRate","ios","RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC","audioQuality","RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN","linearPCMBitDepth","linearPCMIsBigEndian","linearPCMIsFloat","Record","props","_askForPermissions","askAsync","AUDIO_RECORDING","response","setState","haveRecordingPermissions","status","_updateScreenForSoundStatus","isLoaded","soundDuration","durationMillis","soundPosition","positionMillis","shouldPlay","isPlaying","rate","muted","isMuted","volume","shouldCorrectPitch","isPlaybackAllowed","error","console","log","_updateScreenForRecordingStatus","canRecord","isRecording","recordingDuration","isDoneRecording","state","isLoading","_stopRecordingAndEnablePlayback","_onRecordPressed","_stopPlaybackAndBeginRecording","_onPlayPausePressed","soundObject","Sound","loadAsync","require","playAsync","_onStopPressed","sound","stopAsync","_onMutePressed","setIsMutedAsync","_onVolumeSliderValueChange","value","setVolumeAsync","_trySetRate","setRateAsync","_onRateSliderSlidingComplete","RATE_SCALE","_onPitchCorrectionPressed","_onSeekSliderValueChange","isSeeking","shouldPlayAtEndOfSeek","pauseAsync","_onSeekSliderSlidingComplete","seekPosition","playFromPositionAsync","setPositionAsync","recording","fontLoaded","unloadAsync","setOnPlaybackStatusUpdate","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","setOnRecordingStatusUpdate","Recording","prepareToRecordAsync","startAsync","stopAndUnloadAsync","fileURI","getURI","getInfoAsync","info","JSON","stringify","playsInSilentLockedModeIOS","createNewLoadedSoundAsync","isLooping","millis","totalSeconds","seconds","Math","floor","minutes","padWithZero","number","string","toString","_getMMSSFromMillis","recordText","styles","container","recordContainer","playbackContainer","opacity","playbackSlider","_getSeekSliderPosition","playbackTimestamp","_getPlaybackTimestamp","playStopContainer","wrapper","padding","Component","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","alignSelf","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Audio } from 'expo-av';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport {\n  Dimensions,\n  Image,\n  Slider,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport MaterialCommunityIcon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst RecordIcon = <MaterialCommunityIcon size={25} name={'record-rec'} />;\n\nconst recordingSettings = {\n  android: {\n    extension: '.m4a',\n    outputFormat: Audio.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n    audioEncoder: Audio.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n    sampleRate: 44100,\n    numberOfChannels: 2,\n    bitRate: 128000,\n  },\n  ios: {\n    extension: '.m4a',\n    outputFormat: Audio.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC,\n    audioQuality: Audio.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n    sampleRate: 44100,\n    numberOfChannels: 2,\n    bitRate: 128000,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false,\n  },\n};\n\nexport default class Record extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recording = null;\n    this.sound = null;\n    this.isSeeking = false;\n    this.shouldPlayAtEndOfSeek = false;\n    this.state = {\n      haveRecordingPermissions: false,\n      isLoading: false,\n      isPlaybackAllowed: false,\n      muted: false,\n      soundPosition: null,\n      soundDuration: null,\n      recordingDuration: null,\n      shouldPlay: false,\n      isPlaying: false,\n      isRecording: false,\n      fontLoaded: false,\n      shouldCorrectPitch: true,\n      volume: 1.0,\n      rate: 1.0,\n    };\n  }\n\n  componentDidMount() {\n    this._askForPermissions();\n  }\n\n  componentWillUnmount() {\n    this._onStopPressed();\n  }\n\n  _askForPermissions = async () => {\n    const response = await Permissions.askAsync(Permissions.AUDIO_RECORDING);\n    this.setState({\n      haveRecordingPermissions: response.status === 'granted',\n    });\n  };\n\n  _updateScreenForSoundStatus = (status) => {\n    if (status.isLoaded) {\n      this.setState({\n        soundDuration: status.durationMillis,\n        soundPosition: status.positionMillis,\n        shouldPlay: status.shouldPlay,\n        isPlaying: status.isPlaying,\n        rate: status.rate,\n        muted: status.isMuted,\n        volume: status.volume,\n        shouldCorrectPitch: status.shouldCorrectPitch,\n        isPlaybackAllowed: true,\n      });\n    } else {\n      this.setState({\n        soundDuration: null,\n        soundPosition: null,\n        isPlaybackAllowed: false,\n      });\n      if (status.error) {\n        console.log(`FATAL PLAYER ERROR: ${status.error}`);\n      }\n    }\n  };\n\n  _updateScreenForRecordingStatus = (status) => {\n    if (status.canRecord) {\n      this.setState({\n        isRecording: status.isRecording,\n        recordingDuration: status.durationMillis,\n      });\n    } else if (status.isDoneRecording) {\n      this.setState({\n        isRecording: false,\n        recordingDuration: status.durationMillis,\n      });\n      if (!this.state.isLoading) {\n        this._stopRecordingAndEnablePlayback();\n      }\n    }\n  };\n\n  async _stopPlaybackAndBeginRecording() {\n    this.setState({\n      isLoading: true,\n    });\n    if (this.sound !== null) {\n      await this.sound.unloadAsync();\n      this.sound.setOnPlaybackStatusUpdate(null);\n      this.sound = null;\n    }\n    await Audio.setAudioModeAsync({\n      allowsRecordingIOS: true,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      shouldDuckAndroid: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n      playThroughEarpieceAndroid: false,\n      staysActiveInBackground: true,\n    });\n    if (this.recording !== null) {\n      this.recording.setOnRecordingStatusUpdate(null);\n      this.recording = null;\n    }\n\n    const recording = new Audio.Recording();\n    await recording.prepareToRecordAsync(recordingSettings);\n    recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\n\n    this.recording = recording;\n    await this.recording.startAsync();\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  async _stopRecordingAndEnablePlayback() {\n    this.setState({\n      isLoading: true,\n    });\n    try {\n      await this.recording.stopAndUnloadAsync();\n    } catch (error) {\n      // Do nothing -- we are already unloaded.\n    }\n    const fileURI = this.recording.getURI();\n    console.log('File URI is: ');\n    console.log(fileURI);\n    const info = await FileSystem.getInfoAsync(fileURI);\n    console.log(`FILE INFO: ${JSON.stringify(info)}`);\n    await Audio.setAudioModeAsync({\n      allowsRecordingIOS: false,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      playsInSilentLockedModeIOS: true,\n      shouldDuckAndroid: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n      playThroughEarpieceAndroid: false,\n      staysActiveInBackground: true,\n    });\n    const { sound, status } = await this.recording.createNewLoadedSoundAsync(\n      {\n        isLooping: true,\n        isMuted: this.state.muted,\n        volume: this.state.volume,\n        rate: this.state.rate,\n        shouldCorrectPitch: this.state.shouldCorrectPitch,\n      },\n      this._updateScreenForSoundStatus\n    );\n    this.sound = sound;\n\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  _onRecordPressed = () => {\n    if (this.state.isRecording) {\n      this._stopRecordingAndEnablePlayback();\n    } else {\n      this._stopPlaybackAndBeginRecording();\n    }\n  };\n\n  _onPlayPausePressed = async () => {\n    // if (this.sound != null) {\n    //   if (this.state.isPlaying) {\n    //     this.sound.pauseAsync();\n    //   } else {\n    //     this.sound.playAsync();\n    //   }\n    // }\n\n    const soundObject = new Audio.Sound();\n    try {\n      await soundObject.loadAsync(require('../assets/audio/result2.mp3'));\n      await soundObject.playAsync();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  _onStopPressed = () => {\n    if (this.sound != null) {\n      this.sound.stopAsync();\n    }\n  };\n\n  _onMutePressed = () => {\n    if (this.sound != null) {\n      this.sound.setIsMutedAsync(!this.state.muted);\n    }\n  };\n\n  _onVolumeSliderValueChange = (value) => {\n    if (this.sound != null) {\n      this.sound.setVolumeAsync(value);\n    }\n  };\n\n  _trySetRate = async (rate, shouldCorrectPitch) => {\n    if (this.sound != null) {\n      try {\n        await this.sound.setRateAsync(rate, shouldCorrectPitch);\n      } catch (error) {}\n    }\n  };\n\n  _onRateSliderSlidingComplete = async (value) => {\n    this._trySetRate(value * RATE_SCALE, this.state.shouldCorrectPitch);\n  };\n\n  _onPitchCorrectionPressed = async (value) => {\n    this._trySetRate(this.state.rate, !this.state.shouldCorrectPitch);\n  };\n\n  _onSeekSliderValueChange = (value) => {\n    if (this.sound != null && !this.isSeeking) {\n      this.isSeeking = true;\n      this.shouldPlayAtEndOfSeek = this.state.shouldPlay;\n      this.sound.pauseAsync();\n    }\n  };\n\n  _onSeekSliderSlidingComplete = async (value) => {\n    if (this.sound != null) {\n      this.isSeeking = false;\n      const seekPosition = value * this.state.soundDuration;\n      if (this.shouldPlayAtEndOfSeek) {\n        this.sound.playFromPositionAsync(seekPosition);\n      } else {\n        this.sound.setPositionAsync(seekPosition);\n      }\n    }\n  };\n\n  _getSeekSliderPosition() {\n    if (\n      this.sound != null &&\n      this.state.soundPosition != null &&\n      this.state.soundDuration != null\n    ) {\n      return this.state.soundPosition / this.state.soundDuration;\n    }\n    return 0;\n  }\n\n  _getMMSSFromMillis(millis) {\n    const totalSeconds = millis / 1000;\n    const seconds = Math.floor(totalSeconds % 60);\n    const minutes = Math.floor(totalSeconds / 60);\n\n    const padWithZero = (number) => {\n      const string = number.toString();\n      if (number < 10) {\n        return '0' + string;\n      }\n      return string;\n    };\n    return padWithZero(minutes) + ':' + padWithZero(seconds);\n  }\n\n  _getPlaybackTimestamp() {\n    if (\n      this.sound != null &&\n      this.state.soundPosition != null &&\n      this.state.soundDuration != null\n    ) {\n      return `${this._getMMSSFromMillis(\n        this.state.soundPosition\n      )} / ${this._getMMSSFromMillis(this.state.soundDuration)}`;\n    }\n    return '';\n  }\n\n  _getRecordingTimestamp() {\n    if (this.state.recordingDuration != null) {\n      return `${this._getMMSSFromMillis(this.state.recordingDuration)}`;\n    }\n    return `${this._getMMSSFromMillis(0)}`;\n  }\n  render() {\n    const { state } = this;\n    const recordText = this.state.isPlaybackAllowed\n      ? 'Start Recording '\n      : (this.state.isRecording ? 'Stop' : 'Start') + ' Recording';\n    return (\n      <View style={styles.container}>\n        <View style={styles.recordContainer}>\n          <TouchableHighlight\n            onPress={this._onRecordPressed}\n            disabled={this.state.isLoading}\n          >\n            <View style={styles.recordContainer}>\n              <MaterialCommunityIcon\n                size={85}\n                name={this.state.isRecording ? 'stop' : 'record-rec'}\n              />\n              <Text>{recordText}</Text>\n            </View>\n          </TouchableHighlight>\n        </View>\n        <View\n          style={[\n            styles.playbackContainer,\n            { opacity: this.state.isPlaybackAllowed ? 1 : 0 },\n          ]}\n        >\n          <Slider\n            style={styles.playbackSlider}\n            value={this._getSeekSliderPosition()}\n            onValueChange={this._onSeekSliderValueChange}\n            onSlidingComplete={this._onSeekSliderSlidingComplete}\n            disabled={!this.state.isPlaybackAllowed || this.state.isLoading}\n          />\n          <Text style={[styles.playbackTimestamp]}>\n            {this._getPlaybackTimestamp()}\n          </Text>\n          <View style={styles.playStopContainer}>\n            <TouchableHighlight\n              style={styles.wrapper}\n              onPress={this._onPlayPausePressed}\n              disabled={!this.state.isPlaybackAllowed || this.state.isLoading}\n            >\n              <Text style={{ padding: 20 }}>\n                {this.state.isPlaying ? 'Pause' : 'Play'}\n              </Text>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n  },\n  recordContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  playbackContainer: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n  },\n  playbackSlider: {\n    alignSelf: 'stretch',\n  },\n  playbackTimestamp: {\n    textAlign: 'right',\n    alignSelf: 'stretch',\n    paddingRight: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}