{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/george/Documents/fii-stuff/tiln/tiln-travel-assistant-mobile/App/components/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  }\n});\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: 'username',\n      password: 'password',\n      confirmPassword: '',\n      hashedPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onRegister\",\n    value: function onRegister() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      fetch('http://192.168.0.111:5000/api/register', {\n        method: 'post',\n        mode: 'no-cors',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: password\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        try {\n          Alert.alert(data.message);\n        } catch (err) {\n          Alert.alert(err.error);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          return _this2.setState({\n            username: username\n          });\n        },\n        placeholder: 'Username',\n        style: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: 'Password',\n        secureTextEntry: true,\n        style: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        value: this.state.confirmPassword,\n        onChangeText: function onChangeText(confirmPassword) {\n          return _this2.setState({\n            confirmPassword: confirmPassword\n          });\n        },\n        placeholder: 'Confirm Password',\n        secureTextEntry: true,\n        style: styles.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: 'Register',\n        style: styles.input,\n        disabled: this.state.username ? this.state.password === this.state.confirmPassword ? false : true : true,\n        onPress: this.onRegister.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/george/Documents/fii-stuff/tiln/tiln-travel-assistant-mobile/App/components/Register.js"],"names":["React","Component","styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","input","width","height","padding","borderWidth","borderColor","marginBottom","App","props","state","username","password","confirmPassword","hashedPassword","fetch","method","mode","headers","body","JSON","stringify","email","then","resp","json","data","Alert","alert","message","err","error","setState","onRegister","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Alert, Button, TextInput, Text, View, StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10,\n  },\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: 'username',\n      password: 'password',\n      confirmPassword: '',\n      hashedPassword: '',\n    };\n  }\n\n  onRegister() {\n    const { username, password } = this.state;\n    fetch('http://192.168.0.111:5000/api/register', {\n      method: 'post',\n      mode: 'no-cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: username,\n        password: password,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        try {\n          Alert.alert(data.message);\n        } catch (err) {\n          Alert.alert(err.error);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          value={this.state.username}\n          onChangeText={(username) => this.setState({ username })}\n          placeholder={'Username'}\n          style={styles.input}\n        />\n        <TextInput\n          value={this.state.password}\n          onChangeText={(password) => this.setState({ password })}\n          placeholder={'Password'}\n          secureTextEntry={true}\n          style={styles.input}\n        />\n        <TextInput\n          value={this.state.confirmPassword}\n          onChangeText={(confirmPassword) => this.setState({ confirmPassword })}\n          placeholder={'Confirm Password'}\n          secureTextEntry={true}\n          style={styles.input}\n        />\n        <Button\n          title={'Register'}\n          style={styles.input}\n          disabled={\n            this.state.username\n              ? this.state.password === this.state.confirmPassword\n                ? false\n                : true\n              : true\n          }\n          onPress={this.onRegister.bind(this)}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}